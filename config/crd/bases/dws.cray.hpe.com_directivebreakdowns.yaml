
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: directivebreakdowns.dws.cray.hpe.com
spec:
  group: dws.cray.hpe.com
  names:
    kind: DirectiveBreakdown
    listKind: DirectiveBreakdownList
    plural: directivebreakdowns
    singular: directivebreakdown
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DirectiveBreakdown is the Schema for the directivebreakdown API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DirectiveBreakdownSpec defines the storage information WLM
              needs to select NNF Nodes and request storage from the selected nodes
            properties:
              allocationSet:
                description: 'Allocation sets required to fulfill the #DW Directive'
                items:
                  description: AllocationSetComponents define the details of the allocation
                  properties:
                    allocationStrategy:
                      enum:
                      - AllocatePerCompute
                      - AllocateAcrossServers
                      - AllocateSingleServer
                      - AssignPerCompute
                      - AssignAcrossServers
                      type: string
                    constraint:
                      type: string
                    label:
                      type: string
                    minimumCapacity:
                      format: int64
                      type: integer
                  required:
                  - allocationStrategy
                  - constraint
                  - label
                  - minimumCapacity
                  type: object
                type: array
              dwRecord:
                description: 'NOTE: json tags are required.  Any new fields you add
                  must have json tags for the fields to be serialized.'
                properties:
                  dwDirective:
                    description: 'Copy of the #DW for this breakdown'
                    type: string
                  dwDirectiveIndex:
                    description: 'Array index of the #DW directive in original WFR'
                    type: integer
                required:
                - dwDirective
                - dwDirectiveIndex
                type: object
              lifetime:
                enum:
                - job
                - persistent
                type: string
              name:
                type: string
              servers:
                description: Reference to the Server CR to be filled in by WLM
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              type:
                type: string
            required:
            - allocationSet
            - dwRecord
            - lifetime
            - name
            - type
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []


---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: workflows.dws.cray.hpe.com
spec:
  group: dws.cray.hpe.com
  names:
    kind: Workflow
    listKind: WorkflowList
    plural: workflows
    singular: workflow
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Workflow is the Schema for the workflows API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkflowSpec defines the desired state of Workflow
            properties:
              desiredState:
                description: Desired state for the workflow to be in. Unless progressing
                  to the teardown state, this can only be set to the next state when
                  the current desired state has been achieved.
                enum:
                - proposal
                - setup
                - data_in
                - pre_run
                - post_run
                - data_out
                - teardown
                type: string
              dwDirectives:
                description: 'List of #DW strings from a WLM job script'
                items:
                  type: string
                type: array
              jobID:
                type: integer
              userID:
                type: integer
              wlmID:
                type: string
            required:
            - desiredState
            - dwDirectives
            - jobID
            - userID
            - wlmID
            type: object
          status:
            description: WorkflowStatus defines the observed state of the Workflow
            properties:
              drivers:
                description: List of registered drivers and related status.  Updated
                  by drivers.
                items:
                  description: WorkflowDriverStatus defines the status information
                    provided by integration drivers.
                  properties:
                    completed:
                      type: boolean
                    driverID:
                      type: string
                    dwdIndex:
                      type: integer
                    lastHB:
                      format: int64
                      type: integer
                    message:
                      type: string
                    reason:
                      description: 'User readable reason. For the CDS driver, this
                        could be the state of the underlying data movement request:  Pending,
                        Queued, Running, Completed or Error'
                      type: string
                    taskID:
                      type: string
                    watchState:
                      type: string
                  required:
                  - completed
                  - driverID
                  - dwdIndex
                  - lastHB
                  - taskID
                  - watchState
                  type: object
                type: array
              dwDirectiveBreakdowns:
                description: '#DW directive breakdowns indicating to WLM what to allocate
                  on what Rabbit'
                items:
                  description: DWDirectiveBreakdowns define the storage information
                    WLM needs to select NNF Nodes and request storage from the selected
                    nodes
                  properties:
                    allocationSet:
                      items:
                        description: AllocationSetComponents define the details of
                          the allocation
                        properties:
                          allocationStrategy:
                            enum:
                            - AllocatePerCompute
                            - DivideAcrossRabbits
                            - SingleRabbit
                            type: string
                          constraint:
                            type: string
                          label:
                            type: string
                          minimumCapacity:
                            format: int64
                            type: integer
                        required:
                        - allocationStrategy
                        - constraint
                        - label
                        - minimumCapacity
                        type: object
                      type: array
                    dwRecord:
                      properties:
                        dwDirective:
                          description: 'Copy of the #DW for this breakdown'
                          type: string
                        dwDirectiveIndex:
                          description: 'Array index of the #DW directive in original
                            WFR'
                          type: integer
                      required:
                      - dwDirective
                      - dwDirectiveIndex
                      type: object
                    lifetime:
                      enum:
                      - job
                      - persistent
                      type: string
                    name:
                      type: string
                    storageReference:
                      description: Reference to the NNFStorage CR to be filled in
                        by WLM
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    type:
                      type: string
                  required:
                  - allocationSet
                  - dwRecord
                  - lifetime
                  - name
                  - storageReference
                  - type
                  type: object
                type: array
              env:
                description: "Set of DW environment variable settings for WLM to apply
                  to the job. \t\t- DW_JOB_STRIPED \t\t- DW_JOB_PRIVATE \t\t- DW_JOB_STRIPED_CACHE
                  \t\t- DW_JOB_LDBAL_CACHE \t\t- DW_PERSISTENT_STRIPED_{resname}"
                items:
                  type: string
                type: array
              message:
                type: string
              ready:
                description: Ready can be 'True', 'False' Indicates whether State
                  has been reached.
                type: boolean
              reason:
                description: User readable reason and status message
                type: string
              state:
                default: proposal
                description: The state the resource is currently transitioning to.
                  Updated by the controller once started.
                type: string
            required:
            - ready
            - state
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

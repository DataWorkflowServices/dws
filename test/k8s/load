DWSK8SDIR=${DWSK8SDIR:-/root/k8s/dws}

load_roles() {
	kubectl create -f ${DWSK8SDIR}/role.yaml || exit 1
	kubectl create -f ${DWSK8SDIR}/role_binding.yaml || exit 1
	kubectl create -f ${DWSK8SDIR}/service_account.yaml || exit 1
	kubectl create -f ${DWSK8SDIR}/clusterrole.yaml || exit 1
}

load_dws() {
	kubectl create -f ${DWSK8SDIR}/operator.yaml || exit 1
}

load_crds() {
	kubectl create -f ${DWSK8SDIR}/crds/dws_v1alpha1_dwdirectiverule_crd.yaml || exit 1
	kubectl create -f ${DWSK8SDIR}/crds/dws_v1alpha1_storagepool_crd.yaml || exit 1
	kubectl create -f ${DWSK8SDIR}/crds/dws_v1alpha1_workflow_crd.yaml || exit 1
	#kubectl create -f ${DWSK8SDIR}/crds/dws_v1alpha1_instance_crd.yaml || exit 1
}

load_crs() {
	kubectl create -f ${DWSK8SDIR}/crds/dws_v1alpha1_default_ruleset_cr.yaml || exit 1
	kubectl create -f ${DWSK8SDIR}/crds/dws_v1alpha1_cds2.0_ruleset_cr.yaml || exit 1

	kubectl create -f ${DWSK8SDIR}/crds/dws_v1alpha1_workflow_cr.yaml || exit 1
	kubectl create -f ${DWSK8SDIR}/crds/dws_v1alpha1_storagepool_cr.yaml || exit 1
	#kubectl create -f ${DWSK8SDIR}/crds/dws_v1alpha1_instance_cr.yaml || exit 1
}

load_webhooks() {
	kubectl create -f ${DWSK8SDIR}/webhook/dws-validation-admission-webhook.yaml || exit 1
	kubectl create -f ${DWSK8SDIR}/webhook/dws-cds-admission-webhook.yaml || exit 1
	kubectl create -f ${DWSK8SDIR}/webhook/dws-lefs-admission-webhook.yaml || exit 1
	kubectl create -f ${DWSK8SDIR}/webhook/dws-dpms-admission-webhook.yaml || exit 1
}

load_cds() {
	kubectl create -f ${DWSK8SDIR}/drivers/dws_cds_driver.yaml || exit 1
}

case $1 in
	"all")		load_crds;
				load_dws
				load_cds
				load_webhooks
				load_crs;;
	"dws")		load_dws;;
	"webhook")	load_webhooks;;
	"cds")		load_cds;;
	"roles")	load_roles;;
	*)		load_dws;;
esac
